name: Build Bob Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: "Bob"  # Added app name variable
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.10.15
  FLET_CLI_VERSION: 0.27.6
  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1
  UV_NO_PROGRESS: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION
        pip install accelerate transformers torch pandas python-pptx python-docx pypdf2
        
        # Create requirements.txt if it doesn't exist
        if [ ! -f src/requirements.txt ]; then
          echo "Creating requirements.txt"
          pip freeze > src/requirements.txt
        fi

    - name: Set app name in pubspec.yaml
      working-directory: ./src
      run: |
        # Check if pubspec.yaml exists
        if [ -f "pubspec.yaml" ]; then
          # Update the name in pubspec.yaml
          sed -i "s/name: .*/name: $APP_NAME/" pubspec.yaml
          echo "Updated pubspec.yaml with app name: $APP_NAME"
        else
          echo "pubspec.yaml not found - creating one"
          echo "name: $APP_NAME" > pubspec.yaml
          echo "description: A Flet application" >> pubspec.yaml
          echo "version: $BUILD_VERSION+$BUILD_NUMBER" >> pubspec.yaml
          echo "environment:" >> pubspec.yaml
          echo "  sdk: '>=3.0.0 <4.0.0'" >> pubspec.yaml
        fi

    - name: Build Bob Application
      working-directory: ./src
      run: |
        # Clean any previous build artifacts
        rm -rf build/
        
        # Run build with verbose output
        flet build linux \
          --verbose \
          --build-number=$BUILD_NUMBER \
          --build-version=$BUILD_VERSION
        
        # Check if build succeeded
        if [ -d "build/linux" ]; then
          echo "Build succeeded"
          # Rename output directory to include app name
          mv build/linux "build/${APP_NAME}_linux"
        else
          echo "Build failed"
          exit 1
        fi

    - name: Upload Bob Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-linux-build  # Artifact name includes app name
        path: src/build/${{ env.APP_NAME }}_linux  # Updated path with app name
        if-no-files-found: error
        overwrite: false
