name: Build Bob Application (Linux)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: "Bob"
  BUILD_NUMBER: 1
  BUILD_VERSION: "1.0.0"
  PYTHON_VERSION: "3.10.15"
  FLET_CLI_VERSION: "0.27.6"
  FLUTTER_VERSION: "3.27.4"  # Added Flutter version
  PYTHONUTF8: 1

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev patchelf

    - name: Create clean requirements
      working-directory: ./src
      run: |
        echo "flet==$FLET_CLI_VERSION" > requirements.txt
        echo "accelerate" >> requirements.txt
        echo "transformers" >> requirements.txt
        echo "torch" >> requirements.txt
        echo "pandas" >> requirements.txt
        echo "python-pptx" >> requirements.txt
        echo "python-docx" >> requirements.txt
        echo "pypdf2" >> requirements.txt
        sed -i 's/\\/\//g' requirements.txt

    - name: Install Python dependencies
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --no-cache-dir

    - name: Configure Linux build
      working-directory: ./src
      run: |
        # Create pubspec.yaml
        echo "name: $APP_NAME" > pubspec.yaml
        echo "description: Bob The Lawyer Application" >> pubspec.yaml
        echo "version: $BUILD_VERSION+$BUILD_NUMBER" >> pubspec.yaml
        echo "environment:" >> pubspec.yaml
        echo "  sdk: '>=3.0.0 <4.0.0'" >> pubspec.yaml
        
        # Configure Flutter for Linux
        flutter config --enable-linux-desktop
        flutter pub get

    - name: Build Linux application
      working-directory: ./src
      run: |
        rm -rf build/
        flet build linux \
          --build-number=$BUILD_NUMBER \
          --build-version=$BUILD_VERSION \
          --verbose
        
        if [ ! -d "build/linux" ]; then
          echo "Linux build failed!"
          exit 1
        fi

    - name: Package Linux build
      working-directory: ./src
      run: |
        mv build/linux "build/${APP_NAME}_linux"
        tar -czvf "${APP_NAME}_linux.tar.gz" -C "build/${APP_NAME}_linux" .

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-linux
        path: src/build/${{ env.APP_NAME }}_linux.tar.gz
        if-no-files-found: error
