name: Build Bob Application (Linux)
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: "Bob"
  BUILD_NUMBER: 1
  BUILD_VERSION: "1.0.0"
  PYTHON_VERSION: "3.10.15"
  FLET_VERSION: "0.27.6"
  FLUTTER_VERSION: "3.27.4"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends ninja-build libgtk-3-dev patchelf
        sudo apt-get clean
        sudo rm -rf /var/lib/apt/lists/*
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet==${{ env.FLET_VERSION }}
        # Install PyTorch with CPU support
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu --no-cache-dir
        # Install Hugging Face packages (if needed for your app)
        pip install \
          transformers \
          --no-cache-dir --no-deps
        # Install document processing packages
        pip install \
          pandas \
          python-pptx \
          python-docx \
          pypdf2 \
          --no-cache-dir
          
    - name: Configure build
      working-directory: ./src
      run: |
        echo "name: ${{ env.APP_NAME }}" > pubspec.yaml
        echo "version: ${{ env.BUILD_VERSION }}+${{ env.BUILD_NUMBER }}" >> pubspec.yaml
        echo "environment:" >> pubspec.yaml
        echo "  sdk: '>=3.0.0 <4.0.0'" >> pubspec.yaml
        flutter config --enable-linux-desktop
        flutter pub get
        
    - name: Build application
      working-directory: ./src
      run: |
        rm -rf build/
        python -m flet build linux \
          --build-number=${{ env.BUILD_NUMBER }} \
          --build-version=${{ env.BUILD_VERSION }}
          
    - name: Optimize build
      working-directory: ./src/build/linux
      run: |
        find . -type f -executable -exec strip -s {} \; 2>/dev/null || true
        rm -rf flutter/ephemeral flutter/assets/fonts/MaterialIcons-Regular.otf 2>/dev/null || true
        find . -name "*.debug" -delete 2>/dev/null || true
        
    - name: Package and upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-linux
        path: src/build/linux
        if-no-files-found: error
