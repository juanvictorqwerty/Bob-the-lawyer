name: Build Bob Application (Multi-Platform)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: "Bob"
  BUILD_NUMBER: 1
  BUILD_VERSION: "1.0.0"
  PYTHON_VERSION: "3.10.11"
  FLET_VERSION: "0.27.6"
  PYTHONUTF8: 1
  INSTALL_MODE: "production" # Can be "production" or "development"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for development install

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            ninja-build libgtk-3-dev patchelf libgl1 build-essential
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: Install Python dependencies
        working-directory: ./src
        run: |
          python -m pip install --upgrade pip
          pip install flet==${{ env.FLET_VERSION }}
          
          # Development mode installation if specified
          if [ "${{ env.INSTALL_MODE }}" = "development" ]; then
            pip install -e '.[dev]'
            echo "Installed in development mode with all dev dependencies"
          else
            # Production installation
            pip install tqdm>=4.27 packaging>=23.0
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
            pip install -r requirements.txt --no-cache-dir
          fi
          
          # Verification
          python -c "import torch; print(f'PyTorch: {torch.__version__}')"
          python -c "import tqdm; print(f'tqdm: {tqdm.__version__}')"
          pip cache purge

      - name: Build application
        working-directory: ./src
        run: |
          rm -rf build/
          flet build linux \
            --project "$APP_NAME" \
            --description "Bob The Lawyer Application" \
            --build-number $BUILD_NUMBER \
            --build-version $BUILD_VERSION \
            --source-packages tqdm transformers torch \
            --verbose

      - name: Prepare artifact
        working-directory: ./src
        run: |
          find build/linux -name "*.pyc" -delete
          find build/linux -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
          cd build && zip -r ../Bob-linux.zip linux/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-linux-${{ env.INSTALL_MODE }}
          path: src/Bob-linux.zip
          retention-days: 90

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python dependencies
        working-directory: ./src
        run: |
          python -m pip install --upgrade pip
          pip install flet==${{ env.FLET_VERSION }}
          
          if [ "${{ env.INSTALL_MODE }}" = "development" ]; then
            pip install -e '.[dev]'
            echo "Installed in development mode with all dev dependencies"
          else
            # Skip problematic packages on macOS
            pip install -r <(grep -v "xformers" requirements.txt) --no-cache-dir
          fi
          
          python -c "import transformers; print('Transformers:', transformers.__version__)"
          pip cache purge

      - name: Build macOS Application
        working-directory: ./src
        run: |
          rm -rf build/
          flet build macos \
            --project "$APP_NAME" \
            --description "Bob The Lawyer Application" \
            --build-number $BUILD_NUMBER \
            --build-version $BUILD_VERSION \
            --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macos-${{ env.INSTALL_MODE }}
          path: src/build/macos
          retention-days: 90

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python dependencies
        working-directory: ./src
        run: |
          python -m pip install --upgrade pip
          pip install flet==${{ env.FLET_VERSION }}
          
          if ("${{ env.INSTALL_MODE }}" -eq "development") {
            pip install -e '.[dev]'
            Write-Host "Installed in development mode with all dev dependencies"
          } else {
            pip install tqdm>=4.27 packaging>=23.0
            pip install torch --index-url https://download.pytorch.org/whl/cpu
            pip install -r requirements.txt --no-cache-dir
          }
          
          python -c "import torch; print(f'PyTorch: {torch.__version__}')"

      - name: Build Windows Application
        working-directory: ./src
        run: |
          Remove-Item -Path build/ -Recurse -Force -ErrorAction SilentlyContinue
          flet build windows `
            --project "$env:APP_NAME" `
            --description "Bob The Lawyer Application" `
            --build-number $env:BUILD_NUMBER `
            --build-version $env:BUILD_VERSION `
            --source-packages tqdm transformers torch `
            --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-windows-${{ env.INSTALL_MODE }}
          path: src/build/windows
          retention-days: 90