name: Desktop Builds (Linux, macOS, Windows)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  APP_DISPLAY_NAME: Bob  # Human-readable name for the application
  PROJECT_NAME_SNAKE_CASE: bob # Dart package name (lowercase_with_underscores)
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.10.11
  FLET_CLI_VERSION: 0.27.6
  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1
  UV_NO_PROGRESS: 1

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Patch for linux build
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev

    - name: Flet Build Linux
      working-directory: ./src
      run: |
        flet build linux --verbose \
          --build-number $BUILD_NUMBER \
          --build-version $BUILD_VERSION \
          --project-name "$PROJECT_NAME_SNAKE_CASE" \
          --product-name "$APP_DISPLAY_NAME"

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ env.APP_DISPLAY_NAME }}-build
        path: src/build/linux
        if-no-files-found: warn
        overwrite: true

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Flet Build macOS
      working-directory: ./src
      run: |
        flet build macos --verbose \
          --build-number $BUILD_NUMBER \
          --build-version $BUILD_VERSION \
          --project-name "$PROJECT_NAME_SNAKE_CASE" \
          --product-name "$APP_DISPLAY_NAME"

    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ env.APP_DISPLAY_NAME }}-build
        path: src/build/macos
        if-no-files-found: warn
        overwrite: true

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Flet Build Windows
      working-directory: ./src
      run: |
        flet build windows --verbose --no-rich-output `
          --build-number $env:BUILD_NUMBER `
          --build-version $env:BUILD_VERSION `
          --project-name "$env:PROJECT_NAME_SNAKE_CASE" `
          --product-name "$env:APP_DISPLAY_NAME"

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-${{ env.APP_DISPLAY_NAME }}-build
        path: src/build/windows
        if-no-files-found: warn
        overwrite: true